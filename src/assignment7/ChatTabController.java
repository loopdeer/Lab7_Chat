package assignment7;

import javafx.fxml.FXML;

import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import java.io.PrintWriter;
import java.util.Scanner;

import javafx.event.ActionEvent;

import javafx.scene.control.TextArea;

import javafx.scene.control.Tab;

import javafx.event.Event;

public class ChatTabController {
	@FXML
	private Tab startTab;
	@FXML
	private TextArea viewArea;
	@FXML
	private TextField messageBox;
	@FXML
	private Button sendButton;
	@FXML
	private TextField addressBox1;
	@FXML
	private Button addressButton1;
	
	
	private ClientMainController cc;
	private PrintWriter writer;
	private String groupName;
	public ChatTabController(ClientMainController c, String name)
	{
		cc = c;
		writer = c.getWriter();
		groupName = name;
		//viewArea.setEditable(false);
	}
	// Event Listener on Tab[#startTab].onSelectionChanged
	@FXML
	public void allSelected(Event event) {
		// TODO Autogenerated
		cc.setMainArea(viewArea);
		cc.setMainTextField(messageBox);
	}
	// Event Listener on Button[#sendButton].onAction
	@FXML
	public void sendMessage(ActionEvent event) {
		// TODO Autogenerated
		//cc.sendMessage(event);
		Scanner commandChecker = new Scanner(messageBox.getText());
		if(commandChecker.next().equals(ChatClient.COMMANDSTART))
		{
			viewArea.appendText("Do not start messages with " + ChatClient.COMMANDSTART + "\n");
			return;
		}
		
			if(groupName == null)
				viewArea.appendText("Please specify people to talk to.");
			else
			{
			writer.println(groupName + " " + messageBox.getText());
			writer.flush();
			}
			messageBox.setText("");
			messageBox.requestFocus();
		
	}
	// Event Listener on Button[#addressButton1].onAction
	@FXML
	public void talkTo(ActionEvent event) {
		// TODO Autogenerated
		String people = addressBox1.getText();
		addressBox1.setText("");
		addressBox1.requestFocus();
		writer.println(ChatClient.COMMANDSTART + " startconv " + people);
		writer.flush();
	}
	
	
	public TextArea getTA()
	{
		if(viewArea.isEditable())
		{
			viewArea.setEditable(false);
		}
		return viewArea;
	}
	
	
}
